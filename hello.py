#Задача 1
#Напишите функцию to_float(num), которая преобразует любое число в число с плавающей точкой.
#Если в качестве аргумента передан другой тип данных, она возвращает «Невозможно преобразовать».
#def to_float(num):
#    if type(num) == int or type(num) == float:
#        return float(num)
#    else:
#        return "Невозможно преобразовать"
#print(to_float())

#Задача 2
#Напишите функцию num_sum(a), принимающую любое значение. 
#Если это целое число, то возвратить сумму его чисел. 
# противном случае возвращается фраза «Это не целое число». 

#def sum(a):
#    b = 0
#    while a > 0:
#        b += a%10
#        a = a//10
#    return b 

#def num_sum(a):
#    if type(a) == int and type(a) != float:
#        return sum(a)
#    else:
#       return 'Это не целое число'

#print(num_sum())

#Задача 3
#Сумма числе от 1 до n

#def b (a):
#    if a > 0:
#        return a + (b(a - 1))
#   else: 
#        return 0
#print (b(25))

#Задача 4
# На входе имеем список строк разной длины. 
# Необходимо написать функцию all_eq(lst), которая вернет новый список из строк одинаковой длины. 
# Длину итоговой строки определяем исходя из самой большой из них. 
# Если конкретная строка короче самой длинной, дополнить ее нижними подчеркиваниями с правого края до требуемого количества символов.
# Расположение элементов начального списка не менять.

# aboba = ['hh', 'rrrrrrr', 'с']

# def Patrick(f):
#     z=0
#     for i in f:
#         if len(i) > z:
#             z = len(i)
#     return z 


# def all_eq(lst):
#     d=[]
#     for i in lst:
#         while len(i) < Patrick(lst):
#             i+='_'
#         d.append(i)
#     return d

# print(all_eq(aboba))

#Задача 5
# Выведите на экран строковые представления числа 53 в двоичной, восьмеричной системах счисления. Показать решение.

# def binary(a):
#     b = ''
#     while a:
#         b = str(a%2) + b
#         a = a//2
#     return b
# print (binary(16))

# def oct(a):
#     b = ''
#     while a:
#         b = str(a%8) + b
#         a = a//8
#     return b
# print (oct(16))